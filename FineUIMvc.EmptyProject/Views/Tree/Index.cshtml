@{
    ViewBag.Title = "主页";
    var F = Html.F();
}

@section head{
    <link type="text/css" rel="stylesheet" href="~/res/css/index.css?v@(GlobalConfig.ProductVersion)" />
}

@section body{
    @*页面顶部*@
    <div id="sideheader" class="f-widget-header f-mainheader">
        <a class="logo" href="@Url.Content("~/")" title="FineUI MVC">FineUI MVC</a>
    </div>
    <div id="header" class="f-widget-header f-mainheader" style="display:none;">
        <div class="header-left">
            @(F.Button().ID("btnCollapseSidebar").CssClass("icononlyaction").ToolTip("折叠/展开侧边栏").IconAlign(IconAlign.Top).IconFont(IconFont._Fold).EnableDefaultState(false).EnableDefaultCorner(false).TabIndex(-1).Listener("click", "onFoldClick")
            )
        </div>
    </div>

    @*首页内容*@
    <div id="maincontent">
        <h2>FineUIMvc</h2>
        基于 jQuery 的专业 ASP.NET MVC 控件库

        <br />
        <h2>支持的浏览器</h2>
        Chrome、Firefox、Safari、Edge、IE8.0+

        <br />
        <h2>授权协议</h2>
        商业授权

        <br />
        <h2>相关链接</h2>
        <ul class="list">
            <li>
                首页：<a target="_blank" href="http://fineui.com/mvc/">http://fineui.com/mvc/</a>
            </li>
            <li>
                示例：<a target="_blank" href="http://fineui.com/demo_mvc/">http://fineui.com/demo_mvc/</a>
            </li>
            <li>
                更新：<a target="_blank" href="http://fineui.com/version_mvc/">http://fineui.com/version_mvc/</a>
            </li>
            <li>
                论坛：<a target="_blank" href="http://fineui.com/bbs/">http://fineui.com/bbs/</a>
            </li>
        </ul>

    </div>

    @(F.Panel().ShowBorder(false).ShowHeader(false).Layout(LayoutType.Region).CssClass("mainpanel").IsViewPort(true)
        .Items(
            F.Panel().ID("sidebarRegion").CssClass("sidebarregion bgpanel").RegionPosition(Position.Left).Width(260).Layout(LayoutType.VBox).ShowBorder(false).ShowHeader(false).RegionSplit(true).RegionSplitIcon(false).RegionSplitWidth(3).RegionSplitTransparent(true)
                .Items(
                    F.Panel().ShowHeader(false).ShowBorder(false).CssClass("topregion bgpanel").ID("topPanel").ContentEl("#sideheader"),
                    F.Panel().BoxFlex(1).Layout(LayoutType.Fit).ShowHeader(false).ShowBorder(true).CssClass("leftregion bgpanel").ID("leftPanel")
                        .Items(
                            F.Tree().ID("Tree1").ShowBorder(false).ShowHeader(false)
                                .Nodes(
                                    F.TreeNode().Text("ECharts图表示例")
                                        .Nodes(
                                            F.TreeNode().Text("示例一").NavigateUrl("~/Tree/ECharts_1"),
                                            F.TreeNode().Text("示例二").NavigateUrl("~/Tree/ECharts_2")
                                        )
                                )

                        )
                ),
            F.Panel().ID("bodyRegion").CssClass("bodyregion").RegionPosition(Position.Center).Layout(LayoutType.VBox).ShowBorder(false).ShowHeader(false)
                .Items(
                    F.Panel().ID("topPanel").ShowHeader(false).ShowBorder(false).CssClass("topregion").ContentEl("#header"),@*折叠 / 展开按钮 *@
                    F.TabStrip().BoxFlex(1).ID("mainTabStrip").ShowInkBar(true).EnableTabCloseMenu(true).ShowBorder(true)
                        .Tabs(
                            F.Tab().ID("Tab2").Title("首页").BodyPadding(10).Icon(Icon.House).ContentEl("#maincontent")
                        )                                    
                )
            @*F.Region().ID("topPanel").ShowHeader(false).ShowBorder(false).CssClass("topregion").ContentEl("#header"),@*折叠 / 展开按钮 *@
            @*F.Region().ID("mainRegion").CssClass("bodyregion").ShowHeader(false).Layout(LayoutType.VBox).RegionPosition(Position.Center)
                .Items(
                    F.Panel().ID("topPanel").ShowHeader(false).ShowBorder(false).CssClass("topregion").ContentEl("#header"),@*折叠 / 展开按钮 
                    F.TabStrip().ID("mainTabStrip").ShowInkBar(true).EnableTabCloseMenu(true).ShowBorder(true)
                        .Tabs(
                            F.Tab().ID("Tab2").Title("首页").BodyPadding(10).Icon(Icon.House).ContentEl("#maincontent")
                        )                   
             )*@

         )
    )


}

@section script{
    <script>
        // 折叠/展开侧边栏
        function onFoldClick(event) {
            toggleSidebar();
        }


        //折叠/展开侧边栏
        function toggleSidebar(collapsed) {
            var foldButton = F.ui.btnCollapseSidebar;
            var sidebarRegion = F.ui.sidebarRegion;
            var leftPanel = F.ui.leftPanel;
            var logoEl = sidebarRegion.el.find('.logo');

            var currentCollapsed = foldButton.iconFont === 'f-iconfont-unfold';  //判等
            //var currentCollapsed = foldButton.setIconFont ===  'f-iconfont-unfold';  //'f-iconfont-unfold'设置图标字体
            console.log(currentCollapsed);

            if (F.isUND(collapsed)) {
                collapsed = !currentCollapsed;

                //console.log(collapsed);
            } else {
                if (currentCollapsed === collapsed) {
                    return;
                }
            }

            F.noAnimation(function () {
                if (!collapsed) {
                    foldButton.setIconFont('f-iconfont-fold');

                    //if (_menuStyle === 'tree' || _menuStyle === 'tree_minimode') {
                    //    logoEl.removeClass('short').text(logoEl.attr('title'));
                    //    sidebarRegion.setWidth(_sidebarWidth);
                    //    // 启用分隔条拖动
                    //    sidebarRegion.setSplitDraggable(true);

                    //    // 获取树控件实例
                    //    var leftMenuTree = leftPanel.getItem(0);
                    //    // 禁用树微型模式
                    //    leftMenuTree.miniMode = false;
                    //    // 重新加载树菜单
                    //    leftMenuTree.loadData();
                    //} else {
                    sidebarRegion.expand();
                    //}
                } else {
                    foldButton.setIconFont('f-iconfont-unfold');

                    //if (_menuStyle === 'tree' || _menuStyle === 'tree_minimode') {
                    //    logoEl.addClass('short').text('F');
                    //    sidebarRegion.setWidth(60);
                    //    // 禁用分隔条拖动
                    //    sidebarRegion.setSplitDraggable(false);

                    //    // 获取树控件实例
                    //    var leftMenuTree = leftPanel.getItem(0);
                    //    // 启用树微型模式
                    //    leftMenuTree.miniMode = true;
                    //    // 重新加载树菜单
                    //    leftMenuTree.loadData();
                    //} else {
                    sidebarRegion.collapse();
                    //}
                }
            });
        }

        F.ready(function () {
            if (!F.ui.Tree1) return;

            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.Tree1, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

          
        });


    </script>
}